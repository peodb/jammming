{"ast":null,"code":"import _readOnlyError from \"C:\\\\Users\\\\per-olof.bengtsson\\\\Documents\\\\Privat\\\\projects\\\\jammming\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nvar token = {};\nvar applicationID = '52d83a8faecb48efbc97225229941c6f';\nvar redirectURI = 'http://localhost:3000/;';\nvar Spotify = {\n  search: function search(term) {\n    var resultList = [];\n    fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term), {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        response.json().map(function (responseElement) {\n          var resultEl = [];\n          resultEl.ID.push(responseElement.id);\n          resultEl.Name.push(responseElement.artist[0].name);\n          resultEl.URI.push(responseElement.uri);\n          resultList.push(resultEl);\n        });\n      }\n\n      throw new Error('Request failed!');\n    }, function (networkError) {\n      console.log(networkError.message);\n    }).then(function (jsonResponse) {\n      return jsonResponse;\n    });\n  },\n  getAccessToken: function getAccessToken() {\n    if (token) {\n      return token;\n    }\n\n    var url = window.location.href;\n    var accessToken = url.match(/access_token=([^&]*)/);\n    var expireTime = url.match(/expires_in=([^&]*)/);\n\n    if (accessToken && expireTime) {\n      token = (_readOnlyError(\"token\"), accessToken[1]);\n      var expires_in = expireTime[1];\n      window.setTimeout(function () {\n        return token = (_readOnlyError(\"token\"), '');\n      }, expires_in * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return token;\n    } else {\n      window.location = \"https://accounts.spotify.com/authorize?client_id=\".concat(applicationID, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectURI);\n    }\n  },\n  handleSearch: function handleSearch(searchTerm) {\n    return fetch(\"https://api.spotify.com/v1/search?type=TRACK/\".concat(searchTerm), {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"sources":["C:\\Users\\per-olof.bengtsson\\Documents\\Privat\\projects\\jammming\\src\\util\\spotify.js"],"names":["token","applicationID","redirectURI","Spotify","search","term","resultList","fetch","headers","Authorization","then","response","ok","json","map","responseElement","resultEl","ID","push","id","Name","artist","name","URI","uri","Error","networkError","console","log","message","jsonResponse","getAccessToken","url","window","location","href","accessToken","match","expireTime","expires_in","setTimeout","history","pushState","handleSearch","searchTerm"],"mappings":";AACA,IAAMA,KAAK,GAAG,EAAd;AACA,IAAMC,aAAa,GAAG,kCAAtB;AACA,IAAMC,WAAW,GAAG,yBAApB;AACA,IAAMC,OAAO,GAAG;AAEhBC,EAAAA,MAFgB,kBAETC,IAFS,EAEH;AAEX,QAAMC,UAAU,GAAE,EAAlB;AAEAC,IAAAA,KAAK,0DAAmDF,IAAnD,GAA0D;AAC7DG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYT,KAAZ;AADN;AADoD,KAA1D,CAAL,CAIGU,IAJH,CAIS,UAACC,QAAD,EAAc;AACrB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACfD,QAAAA,QAAQ,CAACE,IAAT,GAAgBC,GAAhB,CAAoB,UAAAC,eAAe,EAAI;AACrC,cAAMC,QAAQ,GAAG,EAAjB;AACAA,UAAAA,QAAQ,CAACC,EAAT,CAAYC,IAAZ,CAAiBH,eAAe,CAACI,EAAjC;AACAH,UAAAA,QAAQ,CAACI,IAAT,CAAcF,IAAd,CAAmBH,eAAe,CAACM,MAAhB,CAAuB,CAAvB,EAA0BC,IAA7C;AACAN,UAAAA,QAAQ,CAACO,GAAT,CAAaL,IAAb,CAAkBH,eAAe,CAACS,GAAlC;AACAlB,UAAAA,UAAU,CAACY,IAAX,CAAgBF,QAAhB;AACD,SAND;AAOD;;AACD,YAAM,IAAIS,KAAJ,CAAU,iBAAV,CAAN;AACD,KAfD,EAeG,UAACC,YAAD,EAAkB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,OAAzB;AACD,KAjBD,EAiBGnB,IAjBH,CAiBQ,UAACoB,YAAD,EAAkB;AACxB,aAAOA,YAAP;AACD,KAnBD;AAoBD,GA1Be;AA2BdC,EAAAA,cA3Bc,4BA2BG;AACf,QAAI/B,KAAJ,EAAW;AACT,aAAOA,KAAP;AACD;;AACD,QAAMgC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,QAAMC,WAAW,GAAGJ,GAAG,CAACK,KAAJ,CAAU,sBAAV,CAApB;AACA,QAAMC,UAAU,GAAGN,GAAG,CAACK,KAAJ,CAAU,oBAAV,CAAnB;;AAEA,QAAKD,WAAW,IAAIE,UAApB,EAAgC;AAE9BtC,MAAAA,KAAK,6BAAGoC,WAAW,CAAC,CAAD,CAAd,CAAL;AACA,UAAMG,UAAU,GAAGD,UAAU,CAAC,CAAD,CAA7B;AACAL,MAAAA,MAAM,CAACO,UAAP,CAAkB;AAAA,eAAMxC,KAAK,6BAAG,EAAH,CAAX;AAAA,OAAlB,EAAoCuC,UAAU,GAAG,IAAjD;AACGN,MAAAA,MAAM,CAACQ,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AACA,aAAO1C,KAAP;AAEJ,KARD,MAQO;AACLiC,MAAAA,MAAM,CAACC,QAAP,8DAAsEjC,aAAtE,4EAAqJC,WAArJ;AACD;AAEF,GA/Ca;AAgDdyC,EAAAA,YAhDc,wBAgDDC,UAhDC,EAgDW;AACrB,WAAOrC,KAAK,wDAAiDqC,UAAjD,GAA8D;AACxEpC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYT,KAAZ;AADN;AAD+D,KAA9D,CAAL,CAIJU,IAJI,CAIC,UAAAC,QAAQ,EAAI;AAClB,aAAOA,QAAQ,CAACE,IAAT,EAAP;AACD,KANM,CAAP;AAOD;AAxDW,CAAhB;AA+DA,eAAeV,OAAf","sourcesContent":["\nconst token = {};\nconst applicationID = '52d83a8faecb48efbc97225229941c6f';\nconst redirectURI = 'http://localhost:3000/;'\nconst Spotify = {\n\nsearch(term) {\n\n  const resultList =[];\n\n  fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`,{\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then( (response) => {\n    if (response.ok) {\n      response.json().map(responseElement => {\n        const resultEl = [];\n        resultEl.ID.push(responseElement.id);\n        resultEl.Name.push(responseElement.artist[0].name);\n        resultEl.URI.push(responseElement.uri);\n        resultList.push(resultEl);\n      });\n    }\n    throw new Error('Request failed!');\n  }, (networkError) => {\n    console.log(networkError.message);\n  }).then((jsonResponse) => {\n    return jsonResponse;\n  })\n},\n  getAccessToken() {\n    if (token) {\n      return token;\n    }\n    const url = window.location.href;\n    const accessToken = url.match(/access_token=([^&]*)/);\n    const expireTime = url.match(/expires_in=([^&]*)/);\n\n    if ( accessToken && expireTime) {\n\n      token = accessToken[1];\n      const expires_in = expireTime[1];\n      window.setTimeout(() => token = '', expires_in * 1000);\n         window.history.pushState('Access Token', null, '/');\n         return token;\n\n    } else {\n      window.location = `https://accounts.spotify.com/authorize?client_id=${applicationID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`\n    }\n\n  },\n  handleSearch(searchTerm) {\n      return fetch(`https://api.spotify.com/v1/search?type=TRACK/${searchTerm}`,{\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        return response.json();\n      })\n    }\n\n}\n\n\n\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}