{"ast":null,"code":"import _readOnlyError from \"C:\\\\Users\\\\per-olof.bengtsson\\\\Documents\\\\Privat\\\\projects\\\\jammming\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nvar token = {};\nvar applicationID = '52d83a8faecb48efbc97225229941c6f';\nvar redirectURI = 'http://localhost:3000/;';\nvar Spotify = {\n  search: function search(term) {\n    fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term), {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error('Request failed!');\n    }, function (networkError) {\n      console.log(networkError.message);\n    }).then(function (jsonResponse) {\n      return jsonResponse;\n    });\n  },\n  getAccessToken: function getAccessToken() {\n    if (token) {\n      return token;\n    }\n\n    var url = window.location.href;\n    var accessToken = url.match(/access_token=([^&]*)/);\n    var expireTime = url.match(/expires_in=([^&]*)/);\n\n    if (accessToken && expireTime) {\n      token = (_readOnlyError(\"token\"), accessToken[1]);\n      var expires_in = expireTime[1];\n      window.setTimeout(function () {\n        return token = (_readOnlyError(\"token\"), '');\n      }, expires_in * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return token;\n    } else {\n      window.location = \"https://accounts.spotify.com/authorize?client_id=\".concat(allicationID, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectURI);\n    }\n  },\n  handleSearch: function handleSearch(searchTerm) {\n    return fetch(\"https://api.spotify.com/v1/search?type=TRACK/\".concat(searchTerm), {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n};\nexport default Spotify;","map":{"version":3,"sources":["C:\\Users\\per-olof.bengtsson\\Documents\\Privat\\projects\\jammming\\src\\util\\spotify.js"],"names":["token","applicationID","redirectURI","Spotify","search","term","fetch","headers","Authorization","then","response","ok","json","Error","networkError","console","log","message","jsonResponse","getAccessToken","url","window","location","href","accessToken","match","expireTime","expires_in","setTimeout","history","pushState","allicationID","handleSearch","searchTerm"],"mappings":";AACA,IAAMA,KAAK,GAAG,EAAd;AACA,IAAMC,aAAa,GAAG,kCAAtB;AACA,IAAMC,WAAW,GAAG,yBAApB;AACA,IAAMC,OAAO,GAAG;AAEhBC,EAAAA,MAFgB,kBAETC,IAFS,EAEH;AACXC,IAAAA,KAAK,0DAAmDD,IAAnD,GAA0D;AAC7DE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYR,KAAZ;AADN;AADoD,KAA1D,CAAL,CAIGS,IAJH,CAIS,UAACC,QAAD,EAAc;AACrB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,YAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD,KATD,EASG,UAACC,YAAD,EAAkB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,OAAzB;AACD,KAXD,EAWGR,IAXH,CAWQ,UAACS,YAAD,EAAkB;AACxB,aAAOA,YAAP;AACD,KAbD;AAcD,GAjBe;AAkBdC,EAAAA,cAlBc,4BAkBG;AACf,QAAInB,KAAJ,EAAW;AACT,aAAOA,KAAP;AACD;;AACD,QAAMoB,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,QAAMC,WAAW,GAAGJ,GAAG,CAACK,KAAJ,CAAU,sBAAV,CAApB;AACA,QAAMC,UAAU,GAAGN,GAAG,CAACK,KAAJ,CAAU,oBAAV,CAAnB;;AAEA,QAAKD,WAAW,IAAIE,UAApB,EAAgC;AAE9B1B,MAAAA,KAAK,6BAAGwB,WAAW,CAAC,CAAD,CAAd,CAAL;AACA,UAAMG,UAAU,GAAGD,UAAU,CAAC,CAAD,CAA7B;AACAL,MAAAA,MAAM,CAACO,UAAP,CAAkB;AAAA,eAAM5B,KAAK,6BAAG,EAAH,CAAX;AAAA,OAAlB,EAAoC2B,UAAU,GAAG,IAAjD;AACGN,MAAAA,MAAM,CAACQ,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AACA,aAAO9B,KAAP;AAEJ,KARD,MAQO;AACLqB,MAAAA,MAAM,CAACC,QAAP,8DAAsES,YAAtE,4EAAoJ7B,WAApJ;AACD;AAEF,GAtCa;AAuCd8B,EAAAA,YAvCc,wBAuCDC,UAvCC,EAuCW;AACrB,WAAO3B,KAAK,wDAAiD2B,UAAjD,GAA8D;AACxE1B,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,mBAAYR,KAAZ;AADN;AAD+D,KAA9D,CAAL,CAIJS,IAJI,CAIC,UAAAC,QAAQ,EAAI;AAClB,aAAOA,QAAQ,CAACE,IAAT,EAAP;AACD,KANM,CAAP;AAOD;AA/CW,CAAhB;AAsDA,eAAeT,OAAf","sourcesContent":["\nconst token = {};\nconst applicationID = '52d83a8faecb48efbc97225229941c6f';\nconst redirectURI = 'http://localhost:3000/;'\nconst Spotify = {\n\nsearch(term) {\n  fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`,{\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then( (response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    throw new Error('Request failed!');\n  }, (networkError) => {\n    console.log(networkError.message);\n  }).then((jsonResponse) => {\n    return jsonResponse;\n  })\n},\n  getAccessToken() {\n    if (token) {\n      return token;\n    }\n    const url = window.location.href;\n    const accessToken = url.match(/access_token=([^&]*)/);\n    const expireTime = url.match(/expires_in=([^&]*)/);\n\n    if ( accessToken && expireTime) {\n\n      token = accessToken[1];\n      const expires_in = expireTime[1];\n      window.setTimeout(() => token = '', expires_in * 1000);\n         window.history.pushState('Access Token', null, '/');\n         return token;\n\n    } else {\n      window.location = `https://accounts.spotify.com/authorize?client_id=${allicationID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectURI}`\n    }\n\n  },\n  handleSearch(searchTerm) {\n      return fetch(`https://api.spotify.com/v1/search?type=TRACK/${searchTerm}`,{\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        return response.json();\n      })\n    }\n\n}\n\n\n\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}